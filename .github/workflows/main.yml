name: Generar eBook profesional

on:
  schedule:
    - cron: '0 14 * * 2,5'  # Martes y Viernes a las 11:00 ART
  workflow_dispatch:

jobs:
  generar-ebook:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar repositorio
        uses: actions/checkout@v4

      - name: üîß Instalar dependencias del sistema y wkhtmltopdf
        run: |
          sudo apt-get update
          # xvfb es un servidor de pantalla virtual, necesario para wkhtmltopdf en entornos headless
          sudo apt-get install -y wkhtmltopdf xvfb
          npm install

      - name: üß† Revisar art√≠culos y aplicar plantilla con Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Aseg√∫rate de que este script genere ebook_final.html en public/blog
          node scripts/enhance-ebook-with-gemini.js

      - name: üìò Generar PDF con wkhtmltopdf
        run: |
          mkdir -p public/ebooks
          
          echo "üìÑ Iniciando generaci√≥n del PDF..."
          
          # Usamos xvfb-run para simular un entorno gr√°fico
          xvfb-run --auto-servernum --server-args="-screen 0, 1024x768x24" \
          wkhtmltopdf \
            --enable-local-file-access \
            --enable-javascript \
            --no-stop-slow-scripts \
            --disable-smart-shrinking \
            --dpi 150 \
            --margin-top 15mm \
            --margin-bottom 15mm \
            --margin-left 10mm \
            --margin-right 10mm \
            --header-spacing 5 \
            --footer-spacing 5 \
            --print-media-type \
            --javascript-delay 1000 \
            --no-outline \
            --encoding UTF-8 \
            --page-size A4 \
            --orientation Portrait \
            --title "Hgaruna - Colecci√≥n de Art√≠culos" \
            --footer-center "[page]" \
            public/blog/ebook_final.html public/ebooks/hgaruna-ebook.pdf
            
          # Verificar que el PDF se gener√≥ correctamente
          if [ -f "public/ebooks/hgaruna-ebook.pdf" ]; then
            echo "‚úÖ PDF generado correctamente"
            ls -lh public/ebooks/hgaruna-ebook.pdf
          else
            echo "‚ùå Error: No se pudo generar el PDF"
            exit 1
          fi
        working-directory: ${{ github.workspace }}

      - name: üìÇ Verificar PDF generado
        run: |
          ls -lh public/ebooks/hgaruna-ebook.pdf

      - name: üíæ Commit y push del eBook
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configurar Git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Agregar y hacer commit del PDF
          git add public/ebooks/hgaruna-ebook.pdf
          
          # Verificar si hay cambios para hacer commit
          if ! git diff --cached --quiet; then
            git commit -m "[bot] eBook actualizado - $(date +'%Y-%m-%d %H:%M')"
            
            # Configurar el origen remoto con token de autenticaci√≥n
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            
            # Hacer push de los cambios
            git push origin HEAD:${GITHUB_REF#refs/heads/}
            echo "‚úÖ PDF actualizado en el repositorio"
          else
            echo "‚ÑπÔ∏è No hay cambios en el PDF para hacer commit"
          fi
