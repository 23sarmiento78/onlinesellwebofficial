name: Generar artículos HTML y crear sitemap

on:
  schedule:
    # Lunes a Viernes: 8:00 y 16:00 (hora local Argentina)
    - cron: '0 11,19 * * 1-5'
    # Sábados y Domingos: 10:00 y 18:00 (hora local Argentina)
    - cron: '0 13,21 * * 0,6'
  workflow_dispatch:

jobs:
  generar-articulos-html-y-sitemap:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar repositorio
        uses: actions/checkout@v4

      - name: 🔧 Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Instalar dependencias
        run: npm install

      - name: ⚙️ Configurar variables de entorno
        env:
          SITE_URL: https://www.hgaruna.org
        run: echo "SITE_URL=$SITE_URL" >> $GITHUB_ENV

      - name: 🧠 Generar artículos HTML con Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          SITE_URL: ${{ env.SITE_URL }}
        run: |
          mkdir -p public/blog
          node scripts/generate-html-articles-gemini.js

      #- name: 📣 Publicar en Reddit
       # if: success()
       # env:
        #  REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        #  REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        #  REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        #  REDDIT_REFRESH_TOKEN: ${{ secrets.REDDIT_REFRESH_TOKEN }}
        #  REDDIT_SUBREDDITS: 'programming'
        #  REDDIT_PREFIX_TEXT: '💡 hgaruna tips y mini consejos de programación:'
        #  SITE_URL: ${{ env.SITE_URL }}
       # run: |
        #  if [ -f "scripts/publish-to-socials.js" ]; then
         #   echo "📢 Ejecutando publicación en Reddit..."
          #  node scripts/publish-to-socials.js
         # else
         #   echo "⚠️ Script de publicación no encontrado: scripts/publish-to-socials.js"
         # fi

      - name: 🗺️ Actualizar sitemap
        run: |
          if [ -z "$(ls -A public/blog/*.html 2>/dev/null)" ]; then
            echo "⚠️ No hay artículos HTML para el sitemap"
            exit 0
          fi
          node scripts/update_sitemap.js
          echo "\n📄 Sitemap generado (primeras líneas):"
          head -n 20 public/sitemap.xml || echo "⚠️ No se encontró sitemap.xml"

      - name: 🔍 Verificar artículos generados
        run: |
          echo "📂 Archivos en public/blog:"
          ls -la public/blog/
          for file in public/blog/*.html; do
            echo "\n📄 $file:"
            echo "Tamaño: $(wc -c < "$file") bytes"
            head -n 10 "$file" | sed 's/^/  /'
            echo "..."
          done

      - name: 🧭 Actualizar índice del blog
        run: |
          echo "🔄 Generando índice del blog..."
          node scripts/generate-blog-index.js
          echo "📄 Vista previa de index.json:"
          head -n 10 public/blog/index.json || echo "⚠️ index.json no encontrado"

      - name: 🔍 Enviar URLs a IndexNow
        if: success()
        env:
          SITE_URL: ${{ env.SITE_URL }}
        run: |
          echo "🔍 Instalando dependencias necesarias..."
          npm install axios jq
          
          echo "🔄 Obteniendo lista de artículos..."
          # Obtener archivos HTML de artículos
          ARTICLES=$(find public/blog -name "*.html" ! -name "index.html" | sed 's|public/blog/||' | sed 's/.html$//')
          
          if [ -z "$ARTICLES" ]; then
            echo "⚠️ No se encontraron artículos para enviar a IndexNow"
            exit 0
          fi
          
          echo "📄 Artículos encontrados:"
          echo "$ARTICLES" | sed 's/^/  - /'
          
          # Crear archivo temporal con las URLs
          echo "📝 Creando archivo temporal con URLs..."
          echo 'const { submitToIndexNow } = require("./scripts/indexnow");' > temp-indexnow.js
          echo 'const urls = [' >> temp-indexnow.js
          for article in $ARTICLES; do
            echo "  '${SITE_URL}/blog/${article}'," >> temp-indexnow.js
          done
          echo '];' >> temp-indexnow.js
          echo 'submitToIndexNow(urls).then(success => process.exit(success ? 0 : 1));' >> temp-indexnow.js
          
          echo "🚀 Enviando URLs a IndexNow..."
          node temp-indexnow.js
          RESULT=$?
          
          # Limpiar archivo temporal
          rm -f temp-indexnow.js
          
          if [ $RESULT -ne 0 ]; then
            echo "⚠️ Hubo un error al enviar a IndexNow"
            exit 1
          fi
          
          echo "✅ URLs enviadas exitosamente a IndexNow"

      - name: 💾 Commit y push de artículos, sitemap e índice
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add public/blog public/sitemap.xml scripts/posted_articles.json
          git commit -m "[bot] Artículos HTML y sitemap actualizados - $(date '+%Y-%m-%d %H:%M:%S') ART" || echo "Nada para commitear"
          git push || echo "Nada para pushear"
